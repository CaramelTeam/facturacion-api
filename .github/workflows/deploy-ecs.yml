on:
  push:
    branches:
      - cicd-ecs

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and push to ECR

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        uses: actions/checkout@v2
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: factu-api
          IMAGE_TAG: ${{ github.sha }}
          run: |
            # Build a docker container and
            # push it to ECR so that it can
            # be deployed to ECS.
            echo pwd
            STAGE="prod" IMAGE_TAG=$IMAGE_TAG APP_PORT=3001 docker-compose -f docker-compose.prod.yml build
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        # run: |
        #   # Build a docker container and
        #   # push it to ECR so that it can
        #   # be deployed to ECS.
        #   echo pwd
        #   STAGE="prod" APP_PORT=3001 docker-compose -f docker-compose.prod.yml build
        #   echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
